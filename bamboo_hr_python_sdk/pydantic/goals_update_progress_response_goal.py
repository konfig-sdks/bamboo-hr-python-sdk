# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from bamboo_hr_python_sdk.pydantic.goals_update_progress_response_goal_shared_with_employee_ids import GoalsUpdateProgressResponseGoalSharedWithEmployeeIds

class GoalsUpdateProgressResponseGoal(BaseModel):
    # Title of the goal.
    title: typing.Optional[str] = Field(None, alias='title')

    # A description of the goal.
    description: typing.Optional[str] = Field(None, alias='description')

    # The id of the goal.
    id: typing.Optional[int] = Field(None, alias='id')

    # A percentage (1-100) that denotes how complete the goal is.
    percent_complete: typing.Optional[int] = Field(None, alias='percentComplete')

    aligns_with_option_id: typing.Optional[int] = Field(None, alias='alignsWithOptionId')

    shared_with_employee_ids: typing.Optional[GoalsUpdateProgressResponseGoalSharedWithEmployeeIds] = Field(None, alias='sharedWithEmployeeIds')

    # The due date of the goal.
    due_date: typing.Optional[date] = Field(None, alias='dueDate')

    # The date the goal was completed.
    completion_date: typing.Optional[date] = Field(None, alias='completionDate')

    # The status of the goal.
    status: typing.Optional[str] = Field(None, alias='status')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
