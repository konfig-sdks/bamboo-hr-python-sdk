# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from bamboo_hr_python_sdk.pydantic.training_category import TrainingCategory

class TrainingType(BaseModel):
    # Description for the training.
    description: typing.Optional[str] = Field(None, alias='description')

    # The ID of the training
    id: typing.Optional[int] = Field(None, alias='id')

    # Name of the training type.
    name: typing.Optional[str] = Field(None, alias='name')

    # If true, training will be renewed based off of frequency.
    renewable: typing.Optional[bool] = Field(None, alias='renewable')

    # The frequency is the (optional) amount of months between renewing trainings. Not valid if training are not renewable.
    frequency: typing.Optional[int] = Field(None, alias='frequency')

    # Number of days before the training is due for new hires. Not valid if training is not required.
    due_from_hire_date: typing.Optional[int] = Field(None, alias='dueFromHireDate')

    # Is this a required training?
    required: typing.Optional[int] = Field(None, alias='required')

    category: typing.Optional[TrainingCategory] = Field(None, alias='category')

    # Optional URL that can be included with a training.
    link_url: typing.Optional[str] = Field(None, alias='linkUrl')

    # Allows all employees who can view the training to be able to mark it complete.
    allow_employees_to_mark_complete: typing.Optional[bool] = Field(None, alias='allowEmployeesToMarkComplete')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
