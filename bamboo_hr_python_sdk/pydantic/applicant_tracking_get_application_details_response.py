# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from bamboo_hr_python_sdk.pydantic.applicant_tracking_get_application_details_response_applicant import ApplicantTrackingGetApplicationDetailsResponseApplicant
from bamboo_hr_python_sdk.pydantic.applicant_tracking_get_application_details_response_job import ApplicantTrackingGetApplicationDetailsResponseJob
from bamboo_hr_python_sdk.pydantic.applicant_tracking_get_application_details_response_moved_to import ApplicantTrackingGetApplicationDetailsResponseMovedTo
from bamboo_hr_python_sdk.pydantic.applicant_tracking_get_application_details_response_questions_and_answers import ApplicantTrackingGetApplicationDetailsResponseQuestionsAndAnswers
from bamboo_hr_python_sdk.pydantic.applicant_tracking_get_application_details_response_status import ApplicantTrackingGetApplicationDetailsResponseStatus

class ApplicantTrackingGetApplicationDetailsResponse(BaseModel):
    id: typing.Optional[typing.Union[int, float]] = Field(None, alias='id')

    applied_date: typing.Optional[str] = Field(None, alias='appliedDate')

    status: typing.Optional[ApplicantTrackingGetApplicationDetailsResponseStatus] = Field(None, alias='status')

    rating: typing.Optional[typing.Union[int, float]] = Field(None, alias='rating')

    resume_file_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='resumeFileId')

    cover_letter_file_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='coverLetterFileId')

    moved_to: typing.Optional[ApplicantTrackingGetApplicationDetailsResponseMovedTo] = Field(None, alias='movedTo')

    moved_from: typing.Optional[typing.Optional[str]] = Field(None, alias='movedFrom')

    also_applied_to_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='alsoAppliedToCount')

    duplicate_application_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='duplicateApplicationCount')

    referred_by: typing.Optional[typing.Optional[str]] = Field(None, alias='referredBy')

    desired_salary: typing.Optional[str] = Field(None, alias='desiredSalary')

    comment_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='commentCount')

    email_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='emailCount')

    questions_and_answers: typing.Optional[ApplicantTrackingGetApplicationDetailsResponseQuestionsAndAnswers] = Field(None, alias='questionsAndAnswers')

    applicant: typing.Optional[ApplicantTrackingGetApplicationDetailsResponseApplicant] = Field(None, alias='applicant')

    job: typing.Optional[ApplicantTrackingGetApplicationDetailsResponseJob] = Field(None, alias='job')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
