# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from bamboo_hr_python_sdk.pydantic.milestone import Milestone
from bamboo_hr_python_sdk.pydantic.update_goal_v11_deleted_milestone_ids import UpdateGoalV11DeletedMilestoneIds
from bamboo_hr_python_sdk.pydantic.update_goal_v11_shared_with_employee_ids import UpdateGoalV11SharedWithEmployeeIds

class UpdateGoalV11(BaseModel):
    # [Required] The goal title.
    title: str = Field(alias='title')

    shared_with_employee_ids: UpdateGoalV11SharedWithEmployeeIds = Field(alias='sharedWithEmployeeIds')

    # [Required] The goal due date in YYYY-mm-dd format.
    due_date: str = Field(alias='dueDate')

    # [Optional] The goal description.
    description: typing.Optional[str] = Field(None, alias='description')

    # [Optional] The option ID that aligns with this goal.
    aligns_with_option_id: typing.Optional[str] = Field(None, alias='alignsWithOptionId')

    # [Optional] A flag indicating whether or not milestones are enabled for this goal. Setting this flag to false will delete all existing milestones for this goal.
    milestones_enabled: typing.Optional[bool] = Field(None, alias='milestonesEnabled')

    deleted_milestone_ids: typing.Optional[UpdateGoalV11DeletedMilestoneIds] = Field(None, alias='deletedMilestoneIds')

    # [Optional] All milestones to be added to the goal with this update.
    milestones: typing.Optional[typing.List[Milestone]] = Field(None, alias='milestones')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
