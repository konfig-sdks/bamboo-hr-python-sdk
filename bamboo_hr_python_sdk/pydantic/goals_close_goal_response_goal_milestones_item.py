# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class GoalsCloseGoalResponseGoalMilestonesItem(BaseModel):
    # The title of the milestone.
    title: typing.Optional[str] = Field(None, alias='title')

    # The id of the milestone.
    id: typing.Optional[int] = Field(None, alias='id')

    # The id of the goal which encompasses this milestone.
    employee_goal_id: typing.Optional[int] = Field(None, alias='employeeGoalId')

    # The current value for a numeric milestone. This number will be rounded to the nearest hundreds. On the creation of a numeric milestone this value will automatically be set to the start value of the milestone. If the milestone is a simple checkbox milestone, this value will always be null.
    current_value: typing.Optional[typing.Union[int, float]] = Field(None, alias='currentValue')

    # The starting value for a numeric milestone. This number will be rounded to the nearest hundreds. If the milestone is a simple checkbox milestone, this value will always be null.
    start_value: typing.Optional[typing.Union[int, float]] = Field(None, alias='startValue')

    # The end goal for a numeric milestone. This number will be rounded to the nearest hundreds. If the milestone is a simple checkbox milestone, this value will always be null.
    end_value: typing.Optional[typing.Union[int, float]] = Field(None, alias='endValue')

    # The date and time in which the goal has been completed. If the goal is not completed the value will be null.
    completed_date_time: typing.Optional[str] = Field(None, alias='completedDateTime')

    # The date and time in which the goal was last updated.
    last_update_date_date_time: typing.Optional[str] = Field(None, alias='lastUpdateDateDateTime')

    # The ID of the user who last updated this milestone.
    last_update_user_id: typing.Optional[int] = Field(None, alias='lastUpdateUserId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
