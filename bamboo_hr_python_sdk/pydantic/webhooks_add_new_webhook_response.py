# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from bamboo_hr_python_sdk.pydantic.webhooks_add_new_webhook_response_frequency import WebhooksAddNewWebhookResponseFrequency
from bamboo_hr_python_sdk.pydantic.webhooks_add_new_webhook_response_limit import WebhooksAddNewWebhookResponseLimit
from bamboo_hr_python_sdk.pydantic.webhooks_add_new_webhook_response_monitor_fields import WebhooksAddNewWebhookResponseMonitorFields
from bamboo_hr_python_sdk.pydantic.webhooks_add_new_webhook_response_post_fields import WebhooksAddNewWebhookResponsePostFields

class WebhooksAddNewWebhookResponse(BaseModel):
    # The id of the webhook.
    id: typing.Optional[int] = Field(None, alias='id')

    # The name of the webhook.
    name: typing.Optional[str] = Field(None, alias='name')

    # timestamp of creation
    created: typing.Optional[str] = Field(None, alias='created')

    # timestamp of last webhook sent
    last_sent: typing.Optional[str] = Field(None, alias='lastSent')

    monitor_fields: typing.Optional[WebhooksAddNewWebhookResponseMonitorFields] = Field(None, alias='monitorFields')

    post_fields: typing.Optional[WebhooksAddNewWebhookResponsePostFields] = Field(None, alias='postFields')

    # The url the webhook should send data to.
    url: typing.Optional[str] = Field(None, alias='url')

    # The format the webhook should use (json, form-encoded).
    format: typing.Optional[str] = Field(None, alias='format')

    frequency: typing.Optional[WebhooksAddNewWebhookResponseFrequency] = Field(None, alias='frequency')

    limit: typing.Optional[WebhooksAddNewWebhookResponseLimit] = Field(None, alias='limit')

    # The private key which can be used to verify that the webhook is secure (uses HMAC-SHA256)
    private_key: typing.Optional[str] = Field(None, alias='privateKey')

    # If set to true, the company domain will be added to the header.
    include_company_domain: typing.Optional[bool] = Field(None, alias='includeCompanyDomain')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
