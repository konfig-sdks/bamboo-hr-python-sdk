# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class CompanyBenefitResponse(BaseModel):
    # Description
    description: typing.Optional[str] = Field(None, alias='description')

    # Name
    name: typing.Optional[str] = Field(None, alias='name')

    # Benefit vendor ID
    benefit_vendor_id: typing.Optional[str] = Field(None, alias='benefitVendorId')

    # Benefit type
    benefit_type: typing.Optional[Literal["health", "dental", "vision", "retirement", "hsa", "flex", "life", "disability", "reimbursement", "supplemental", "other"]] = Field(None, alias='benefitType')

    # Deduction type ID
    deduction_type_id: typing.Optional[int] = Field(None, alias='deductionTypeId')

    # Benefit start date
    start_date: typing.Optional[date] = Field(None, alias='startDate')

    # Benefit end date
    end_date: typing.Optional[date] = Field(None, alias='endDate')

    # Plan url
    plan_url: typing.Optional[str] = Field(None, alias='planUrl')

    # SSO login url
    sso_login_url: typing.Optional[str] = Field(None, alias='ssoLoginUrl')

    # SSO login link text
    sso_login_url_link_text: typing.Optional[str] = Field(None, alias='ssoLoginUrlLinkText')

    # Is a safe harbor
    safe_harbor: typing.Optional[Literal["true", "false", None]] = Field(None, alias='safeHarbor')

    # Meets ACA minimum requirements
    meet_aca_min: typing.Optional[Literal["true", "false", None]] = Field(None, alias='meetAcaMin')

    # Reimbursement amount
    reimbursement_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='reimbursementAmount')

    # Reimbursement frequency
    reimbursement_frequency: typing.Optional[Literal["pay period", "month", "quarter", "year", "one time", None]] = Field(None, alias='reimbursementFrequency')

    # Provides minimum essential coverage
    min_essential_coverage: typing.Optional[Literal["true", "false", None]] = Field(None, alias='minEssentialCoverage')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
