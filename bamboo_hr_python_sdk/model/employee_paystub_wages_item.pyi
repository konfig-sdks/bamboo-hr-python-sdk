# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bamboo_hr_python_sdk import schemas  # noqa: F401


class EmployeePaystubWagesItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            externalWageId = schemas.StrSchema
            wageDescription = schemas.StrSchema
            wageAmount = schemas.StrSchema
            ytdWageAmount = schemas.StrSchema
            wageRate = schemas.StrSchema
            hours = schemas.StrSchema
            __annotations__ = {
                "externalWageId": externalWageId,
                "wageDescription": wageDescription,
                "wageAmount": wageAmount,
                "ytdWageAmount": ytdWageAmount,
                "wageRate": wageRate,
                "hours": hours,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["externalWageId"]) -> MetaOapg.properties.externalWageId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wageDescription"]) -> MetaOapg.properties.wageDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wageAmount"]) -> MetaOapg.properties.wageAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdWageAmount"]) -> MetaOapg.properties.ytdWageAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wageRate"]) -> MetaOapg.properties.wageRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hours"]) -> MetaOapg.properties.hours: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["externalWageId", "wageDescription", "wageAmount", "ytdWageAmount", "wageRate", "hours", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["externalWageId"]) -> typing.Union[MetaOapg.properties.externalWageId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wageDescription"]) -> typing.Union[MetaOapg.properties.wageDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wageAmount"]) -> typing.Union[MetaOapg.properties.wageAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdWageAmount"]) -> typing.Union[MetaOapg.properties.ytdWageAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wageRate"]) -> typing.Union[MetaOapg.properties.wageRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hours"]) -> typing.Union[MetaOapg.properties.hours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["externalWageId", "wageDescription", "wageAmount", "ytdWageAmount", "wageRate", "hours", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        externalWageId: typing.Union[MetaOapg.properties.externalWageId, str, schemas.Unset] = schemas.unset,
        wageDescription: typing.Union[MetaOapg.properties.wageDescription, str, schemas.Unset] = schemas.unset,
        wageAmount: typing.Union[MetaOapg.properties.wageAmount, str, schemas.Unset] = schemas.unset,
        ytdWageAmount: typing.Union[MetaOapg.properties.ytdWageAmount, str, schemas.Unset] = schemas.unset,
        wageRate: typing.Union[MetaOapg.properties.wageRate, str, schemas.Unset] = schemas.unset,
        hours: typing.Union[MetaOapg.properties.hours, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeePaystubWagesItem':
        return super().__new__(
            cls,
            *args,
            externalWageId=externalWageId,
            wageDescription=wageDescription,
            wageAmount=wageAmount,
            ytdWageAmount=ytdWageAmount,
            wageRate=wageRate,
            hours=hours,
            _configuration=_configuration,
            **kwargs,
        )
