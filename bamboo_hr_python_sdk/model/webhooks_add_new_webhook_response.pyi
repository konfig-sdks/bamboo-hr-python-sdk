# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bamboo_hr_python_sdk import schemas  # noqa: F401


class WebhooksAddNewWebhookResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.IntSchema
            
            
            class name(
                schemas.StrSchema
            ):
                pass
            created = schemas.StrSchema
            lastSent = schemas.StrSchema
        
            @staticmethod
            def monitorFields() -> typing.Type['WebhooksAddNewWebhookResponseMonitorFields']:
                return WebhooksAddNewWebhookResponseMonitorFields
        
            @staticmethod
            def postFields() -> typing.Type['WebhooksAddNewWebhookResponsePostFields']:
                return WebhooksAddNewWebhookResponsePostFields
            url = schemas.StrSchema
            format = schemas.StrSchema
        
            @staticmethod
            def frequency() -> typing.Type['WebhooksAddNewWebhookResponseFrequency']:
                return WebhooksAddNewWebhookResponseFrequency
        
            @staticmethod
            def limit() -> typing.Type['WebhooksAddNewWebhookResponseLimit']:
                return WebhooksAddNewWebhookResponseLimit
            privateKey = schemas.StrSchema
            includeCompanyDomain = schemas.BoolSchema
            __annotations__ = {
                "id": id,
                "name": name,
                "created": created,
                "lastSent": lastSent,
                "monitorFields": monitorFields,
                "postFields": postFields,
                "url": url,
                "format": format,
                "frequency": frequency,
                "limit": limit,
                "privateKey": privateKey,
                "includeCompanyDomain": includeCompanyDomain,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["created"]) -> MetaOapg.properties.created: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastSent"]) -> MetaOapg.properties.lastSent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["monitorFields"]) -> 'WebhooksAddNewWebhookResponseMonitorFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["postFields"]) -> 'WebhooksAddNewWebhookResponsePostFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["url"]) -> MetaOapg.properties.url: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["format"]) -> MetaOapg.properties.format: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["frequency"]) -> 'WebhooksAddNewWebhookResponseFrequency': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["limit"]) -> 'WebhooksAddNewWebhookResponseLimit': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["privateKey"]) -> MetaOapg.properties.privateKey: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["includeCompanyDomain"]) -> MetaOapg.properties.includeCompanyDomain: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "name", "created", "lastSent", "monitorFields", "postFields", "url", "format", "frequency", "limit", "privateKey", "includeCompanyDomain", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["created"]) -> typing.Union[MetaOapg.properties.created, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastSent"]) -> typing.Union[MetaOapg.properties.lastSent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["monitorFields"]) -> typing.Union['WebhooksAddNewWebhookResponseMonitorFields', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["postFields"]) -> typing.Union['WebhooksAddNewWebhookResponsePostFields', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["url"]) -> typing.Union[MetaOapg.properties.url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["format"]) -> typing.Union[MetaOapg.properties.format, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["frequency"]) -> typing.Union['WebhooksAddNewWebhookResponseFrequency', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["limit"]) -> typing.Union['WebhooksAddNewWebhookResponseLimit', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["privateKey"]) -> typing.Union[MetaOapg.properties.privateKey, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["includeCompanyDomain"]) -> typing.Union[MetaOapg.properties.includeCompanyDomain, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "name", "created", "lastSent", "monitorFields", "postFields", "url", "format", "frequency", "limit", "privateKey", "includeCompanyDomain", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        created: typing.Union[MetaOapg.properties.created, str, schemas.Unset] = schemas.unset,
        lastSent: typing.Union[MetaOapg.properties.lastSent, str, schemas.Unset] = schemas.unset,
        monitorFields: typing.Union['WebhooksAddNewWebhookResponseMonitorFields', schemas.Unset] = schemas.unset,
        postFields: typing.Union['WebhooksAddNewWebhookResponsePostFields', schemas.Unset] = schemas.unset,
        url: typing.Union[MetaOapg.properties.url, str, schemas.Unset] = schemas.unset,
        format: typing.Union[MetaOapg.properties.format, str, schemas.Unset] = schemas.unset,
        frequency: typing.Union['WebhooksAddNewWebhookResponseFrequency', schemas.Unset] = schemas.unset,
        limit: typing.Union['WebhooksAddNewWebhookResponseLimit', schemas.Unset] = schemas.unset,
        privateKey: typing.Union[MetaOapg.properties.privateKey, str, schemas.Unset] = schemas.unset,
        includeCompanyDomain: typing.Union[MetaOapg.properties.includeCompanyDomain, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'WebhooksAddNewWebhookResponse':
        return super().__new__(
            cls,
            *args,
            id=id,
            name=name,
            created=created,
            lastSent=lastSent,
            monitorFields=monitorFields,
            postFields=postFields,
            url=url,
            format=format,
            frequency=frequency,
            limit=limit,
            privateKey=privateKey,
            includeCompanyDomain=includeCompanyDomain,
            _configuration=_configuration,
            **kwargs,
        )

from bamboo_hr_python_sdk.model.webhooks_add_new_webhook_response_frequency import WebhooksAddNewWebhookResponseFrequency
from bamboo_hr_python_sdk.model.webhooks_add_new_webhook_response_limit import WebhooksAddNewWebhookResponseLimit
from bamboo_hr_python_sdk.model.webhooks_add_new_webhook_response_monitor_fields import WebhooksAddNewWebhookResponseMonitorFields
from bamboo_hr_python_sdk.model.webhooks_add_new_webhook_response_post_fields import WebhooksAddNewWebhookResponsePostFields
