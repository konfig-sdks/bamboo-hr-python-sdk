# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bamboo_hr_python_sdk import schemas  # noqa: F401


class ApplicantTrackingListApplicationsResponseApplicationsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.NumberSchema
            appliedDate = schemas.StrSchema
        
            @staticmethod
            def status() -> typing.Type['ApplicantTrackingListApplicationsResponseApplicationsItemStatus']:
                return ApplicantTrackingListApplicationsResponseApplicationsItemStatus
            rating = schemas.NumberSchema
        
            @staticmethod
            def applicant() -> typing.Type['ApplicantTrackingListApplicationsResponseApplicationsItemApplicant']:
                return ApplicantTrackingListApplicationsResponseApplicationsItemApplicant
        
            @staticmethod
            def job() -> typing.Type['ApplicantTrackingListApplicationsResponseApplicationsItemJob']:
                return ApplicantTrackingListApplicationsResponseApplicationsItemJob
            __annotations__ = {
                "id": id,
                "appliedDate": appliedDate,
                "status": status,
                "rating": rating,
                "applicant": applicant,
                "job": job,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["appliedDate"]) -> MetaOapg.properties.appliedDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> 'ApplicantTrackingListApplicationsResponseApplicationsItemStatus': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["rating"]) -> MetaOapg.properties.rating: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["applicant"]) -> 'ApplicantTrackingListApplicationsResponseApplicationsItemApplicant': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job"]) -> 'ApplicantTrackingListApplicationsResponseApplicationsItemJob': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "appliedDate", "status", "rating", "applicant", "job", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["appliedDate"]) -> typing.Union[MetaOapg.properties.appliedDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemStatus', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["rating"]) -> typing.Union[MetaOapg.properties.rating, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["applicant"]) -> typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemApplicant', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job"]) -> typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemJob', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "appliedDate", "status", "rating", "applicant", "job", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        appliedDate: typing.Union[MetaOapg.properties.appliedDate, str, schemas.Unset] = schemas.unset,
        status: typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemStatus', schemas.Unset] = schemas.unset,
        rating: typing.Union[MetaOapg.properties.rating, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        applicant: typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemApplicant', schemas.Unset] = schemas.unset,
        job: typing.Union['ApplicantTrackingListApplicationsResponseApplicationsItemJob', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ApplicantTrackingListApplicationsResponseApplicationsItem':
        return super().__new__(
            cls,
            *args,
            id=id,
            appliedDate=appliedDate,
            status=status,
            rating=rating,
            applicant=applicant,
            job=job,
            _configuration=_configuration,
            **kwargs,
        )

from bamboo_hr_python_sdk.model.applicant_tracking_list_applications_response_applications_item_applicant import ApplicantTrackingListApplicationsResponseApplicationsItemApplicant
from bamboo_hr_python_sdk.model.applicant_tracking_list_applications_response_applications_item_job import ApplicantTrackingListApplicationsResponseApplicationsItemJob
from bamboo_hr_python_sdk.model.applicant_tracking_list_applications_response_applications_item_status import ApplicantTrackingListApplicationsResponseApplicationsItemStatus
