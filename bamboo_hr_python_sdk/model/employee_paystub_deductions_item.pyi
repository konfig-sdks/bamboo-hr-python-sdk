# coding: utf-8

"""
    BambooHR API

    This is the majority of the API requests including some that are not documented.  http://www.bamboohr.com/api/documentation/

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bamboo_hr_python_sdk import schemas  # noqa: F401


class EmployeePaystubDeductionsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            externalDeductionId = schemas.StrSchema
            deductionDescription = schemas.StrSchema
            deductionAmount = schemas.StrSchema
            ytdDeductionAmount = schemas.StrSchema
            __annotations__ = {
                "externalDeductionId": externalDeductionId,
                "deductionDescription": deductionDescription,
                "deductionAmount": deductionAmount,
                "ytdDeductionAmount": ytdDeductionAmount,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["externalDeductionId"]) -> MetaOapg.properties.externalDeductionId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deductionDescription"]) -> MetaOapg.properties.deductionDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["deductionAmount"]) -> MetaOapg.properties.deductionAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ytdDeductionAmount"]) -> MetaOapg.properties.ytdDeductionAmount: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["externalDeductionId", "deductionDescription", "deductionAmount", "ytdDeductionAmount", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["externalDeductionId"]) -> typing.Union[MetaOapg.properties.externalDeductionId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deductionDescription"]) -> typing.Union[MetaOapg.properties.deductionDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["deductionAmount"]) -> typing.Union[MetaOapg.properties.deductionAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ytdDeductionAmount"]) -> typing.Union[MetaOapg.properties.ytdDeductionAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["externalDeductionId", "deductionDescription", "deductionAmount", "ytdDeductionAmount", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        externalDeductionId: typing.Union[MetaOapg.properties.externalDeductionId, str, schemas.Unset] = schemas.unset,
        deductionDescription: typing.Union[MetaOapg.properties.deductionDescription, str, schemas.Unset] = schemas.unset,
        deductionAmount: typing.Union[MetaOapg.properties.deductionAmount, str, schemas.Unset] = schemas.unset,
        ytdDeductionAmount: typing.Union[MetaOapg.properties.ytdDeductionAmount, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeePaystubDeductionsItem':
        return super().__new__(
            cls,
            *args,
            externalDeductionId=externalDeductionId,
            deductionDescription=deductionDescription,
            deductionAmount=deductionAmount,
            ytdDeductionAmount=ytdDeductionAmount,
            _configuration=_configuration,
            **kwargs,
        )
